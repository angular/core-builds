/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/**
 * @define Support for jsnamespace attribute.  This flag can be overridden in a
 * build rule to trim down the EventContract's binary size.
 */
export const JSNAMESPACE_SUPPORT = true;
/**
 * @define Handles a11y click casting in the dispatcher rather than
 * the event contract. When enabled, it will enable
 * EventContract.A11Y_CLICK_SUPPORT as well as both are required for this
 * functionality.
 */
export const A11Y_SUPPORT_IN_DISPATCHER = false;
/**
 * @define Support for accessible click actions.  This flag can be overridden in
 * a build rule.
 */
const A11Y_CLICK_SUPPORT_FLAG_ENABLED = false;
/**
 * Enables a11y click casting when either A11Y_CLICK_SUPPORT_FLAG_ENABLED or
 * A11Y_SUPPORT_IN_DISPATCHER.
 */
export const A11Y_CLICK_SUPPORT = A11Y_CLICK_SUPPORT_FLAG_ENABLED || A11Y_SUPPORT_IN_DISPATCHER;
/**
 * @define Support for the non-bubbling mouseenter and mouseleave events.  This
 * flag can be overridden in a build rule.
 */
export const MOUSE_SPECIAL_SUPPORT = false;
/**
 * @define Call stopPropagation on handled events. When integrating with
 * non-jsaction event handler based code, you will likely want to turn this flag
 * off. While most event handlers will continue to work, jsaction binds focus
 * and blur events in the capture phase and thus with stopPropagation, none of
 * your non-jsaction-handlers will ever see it.
 */
export const STOP_PROPAGATION = true;
/**
 * @define Support for custom events, which are type EventType.CUSTOM. These are
 * native DOM events with an additional type field and an optional payload.
 */
export const CUSTOM_EVENT_SUPPORT = false;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXZlbnRfY29udHJhY3RfZGVmaW5lcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2NvcmUvcHJpbWl0aXZlcy9ldmVudC1kaXNwYXRjaC9zcmMvZXZlbnRfY29udHJhY3RfZGVmaW5lcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0dBTUc7QUFFSDs7O0dBR0c7QUFDSCxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyxJQUFJLENBQUM7QUFFeEM7Ozs7O0dBS0c7QUFDSCxNQUFNLENBQUMsTUFBTSwwQkFBMEIsR0FBRyxLQUFLLENBQUM7QUFFaEQ7OztHQUdHO0FBQ0gsTUFBTSwrQkFBK0IsR0FBRyxLQUFLLENBQUM7QUFFOUM7OztHQUdHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBQUcsK0JBQStCLElBQUksMEJBQTBCLENBQUM7QUFFaEc7OztHQUdHO0FBQ0gsTUFBTSxDQUFDLE1BQU0scUJBQXFCLEdBQUcsS0FBSyxDQUFDO0FBRTNDOzs7Ozs7R0FNRztBQUNILE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFHLElBQUksQ0FBQztBQUVyQzs7O0dBR0c7QUFDSCxNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRyxLQUFLLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIExMQyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cblxuLyoqXG4gKiBAZGVmaW5lIFN1cHBvcnQgZm9yIGpzbmFtZXNwYWNlIGF0dHJpYnV0ZS4gIFRoaXMgZmxhZyBjYW4gYmUgb3ZlcnJpZGRlbiBpbiBhXG4gKiBidWlsZCBydWxlIHRvIHRyaW0gZG93biB0aGUgRXZlbnRDb250cmFjdCdzIGJpbmFyeSBzaXplLlxuICovXG5leHBvcnQgY29uc3QgSlNOQU1FU1BBQ0VfU1VQUE9SVCA9IHRydWU7XG5cbi8qKlxuICogQGRlZmluZSBIYW5kbGVzIGExMXkgY2xpY2sgY2FzdGluZyBpbiB0aGUgZGlzcGF0Y2hlciByYXRoZXIgdGhhblxuICogdGhlIGV2ZW50IGNvbnRyYWN0LiBXaGVuIGVuYWJsZWQsIGl0IHdpbGwgZW5hYmxlXG4gKiBFdmVudENvbnRyYWN0LkExMVlfQ0xJQ0tfU1VQUE9SVCBhcyB3ZWxsIGFzIGJvdGggYXJlIHJlcXVpcmVkIGZvciB0aGlzXG4gKiBmdW5jdGlvbmFsaXR5LlxuICovXG5leHBvcnQgY29uc3QgQTExWV9TVVBQT1JUX0lOX0RJU1BBVENIRVIgPSBmYWxzZTtcblxuLyoqXG4gKiBAZGVmaW5lIFN1cHBvcnQgZm9yIGFjY2Vzc2libGUgY2xpY2sgYWN0aW9ucy4gIFRoaXMgZmxhZyBjYW4gYmUgb3ZlcnJpZGRlbiBpblxuICogYSBidWlsZCBydWxlLlxuICovXG5jb25zdCBBMTFZX0NMSUNLX1NVUFBPUlRfRkxBR19FTkFCTEVEID0gZmFsc2U7XG5cbi8qKlxuICogRW5hYmxlcyBhMTF5IGNsaWNrIGNhc3Rpbmcgd2hlbiBlaXRoZXIgQTExWV9DTElDS19TVVBQT1JUX0ZMQUdfRU5BQkxFRCBvclxuICogQTExWV9TVVBQT1JUX0lOX0RJU1BBVENIRVIuXG4gKi9cbmV4cG9ydCBjb25zdCBBMTFZX0NMSUNLX1NVUFBPUlQgPSBBMTFZX0NMSUNLX1NVUFBPUlRfRkxBR19FTkFCTEVEIHx8IEExMVlfU1VQUE9SVF9JTl9ESVNQQVRDSEVSO1xuXG4vKipcbiAqIEBkZWZpbmUgU3VwcG9ydCBmb3IgdGhlIG5vbi1idWJibGluZyBtb3VzZWVudGVyIGFuZCBtb3VzZWxlYXZlIGV2ZW50cy4gIFRoaXNcbiAqIGZsYWcgY2FuIGJlIG92ZXJyaWRkZW4gaW4gYSBidWlsZCBydWxlLlxuICovXG5leHBvcnQgY29uc3QgTU9VU0VfU1BFQ0lBTF9TVVBQT1JUID0gZmFsc2U7XG5cbi8qKlxuICogQGRlZmluZSBDYWxsIHN0b3BQcm9wYWdhdGlvbiBvbiBoYW5kbGVkIGV2ZW50cy4gV2hlbiBpbnRlZ3JhdGluZyB3aXRoXG4gKiBub24tanNhY3Rpb24gZXZlbnQgaGFuZGxlciBiYXNlZCBjb2RlLCB5b3Ugd2lsbCBsaWtlbHkgd2FudCB0byB0dXJuIHRoaXMgZmxhZ1xuICogb2ZmLiBXaGlsZSBtb3N0IGV2ZW50IGhhbmRsZXJzIHdpbGwgY29udGludWUgdG8gd29yaywganNhY3Rpb24gYmluZHMgZm9jdXNcbiAqIGFuZCBibHVyIGV2ZW50cyBpbiB0aGUgY2FwdHVyZSBwaGFzZSBhbmQgdGh1cyB3aXRoIHN0b3BQcm9wYWdhdGlvbiwgbm9uZSBvZlxuICogeW91ciBub24tanNhY3Rpb24taGFuZGxlcnMgd2lsbCBldmVyIHNlZSBpdC5cbiAqL1xuZXhwb3J0IGNvbnN0IFNUT1BfUFJPUEFHQVRJT04gPSB0cnVlO1xuXG4vKipcbiAqIEBkZWZpbmUgU3VwcG9ydCBmb3IgY3VzdG9tIGV2ZW50cywgd2hpY2ggYXJlIHR5cGUgRXZlbnRUeXBlLkNVU1RPTS4gVGhlc2UgYXJlXG4gKiBuYXRpdmUgRE9NIGV2ZW50cyB3aXRoIGFuIGFkZGl0aW9uYWwgdHlwZSBmaWVsZCBhbmQgYW4gb3B0aW9uYWwgcGF5bG9hZC5cbiAqL1xuZXhwb3J0IGNvbnN0IENVU1RPTV9FVkVOVF9TVVBQT1JUID0gZmFsc2U7XG4iXX0=