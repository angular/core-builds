/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/**
 * The jsaction attribute defines a mapping of a DOM event to a
 * generic event (aka jsaction), to which the actual event handlers
 * that implement the behavior of the application are bound. The
 * value is a semicolon separated list of colon separated pairs of
 * an optional DOM event name and a jsaction name. If the optional
 * DOM event name is omitted, 'click' is assumed. The jsaction names
 * are dot separated pairs of a namespace and a simple jsaction
 * name. If the namespace is absent, it is taken from the closest
 * ancestor element with a jsnamespace attribute, if there is
 * any. If there is no ancestor with a jsnamespace attribute, the
 * simple name is assumed to be the jsaction name.
 *
 * Used by EventContract.
 */
export const JSACTION = 'jsaction';
/**
 * The jsnamespace attribute provides the namespace part of the
 * jaction names occurring in the jsaction attribute where it's
 * missing.
 *
 * Used by EventContract.
 */
export const JSNAMESPACE = 'jsnamespace';
/**
 * The oi attribute is a log impression tag for impression logging
 * and action tracking. For an element that carries a jsaction
 * attribute, the element is identified for the purpose of
 * impression logging and click tracking by the dot separated path
 * of all oi attributes in the chain of ancestors of the element.
 *
 * Used by ActionFlow.
 */
export const OI = 'oi';
/**
 * The ved attribute is an encoded ClickTrackingCGI proto to track
 * visual elements.
 *
 * Used by ActionFlow.
 */
export const VED = 'ved';
/**
 * The vet attribute is the visual element type used to identify tracked
 * visual elements.
 */
export const VET = 'vet';
/**
 * Support for iteration on reprocessing.
 *
 * Used by ActionFlow.
 */
export const JSINSTANCE = 'jsinstance';
/**
 * All click jsactions that happen on the element that carries this
 * attribute or its descendants are automatically logged.
 * Impressions of jsactions on these elements are tracked too, if
 * requested by the impression() method of ActionFlow.
 *
 * Used by ActionFlow.
 */
export const JSTRACK = 'jstrack';
export const Attribute = { JSACTION, JSNAMESPACE, OI, VED, VET, JSINSTANCE, JSTRACK };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXR0cmlidXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvY29yZS9wcmltaXRpdmVzL2V2ZW50LWRpc3BhdGNoL3NyYy9hdHRyaWJ1dGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUg7Ozs7Ozs7Ozs7Ozs7O0dBY0c7QUFDSCxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsVUFBVSxDQUFDO0FBRW5DOzs7Ozs7R0FNRztBQUNILE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxhQUFhLENBQUM7QUFFekM7Ozs7Ozs7O0dBUUc7QUFDSCxNQUFNLENBQUMsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDO0FBRXZCOzs7OztHQUtHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sR0FBRyxHQUFHLEtBQUssQ0FBQztBQUV6Qjs7O0dBR0c7QUFDSCxNQUFNLENBQUMsTUFBTSxHQUFHLEdBQUcsS0FBSyxDQUFDO0FBRXpCOzs7O0dBSUc7QUFDSCxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQUcsWUFBWSxDQUFDO0FBRXZDOzs7Ozs7O0dBT0c7QUFDSCxNQUFNLENBQUMsTUFBTSxPQUFPLEdBQUcsU0FBUyxDQUFDO0FBRWpDLE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBRyxFQUFDLFFBQVEsRUFBRSxXQUFXLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5cbi8qKlxuICogVGhlIGpzYWN0aW9uIGF0dHJpYnV0ZSBkZWZpbmVzIGEgbWFwcGluZyBvZiBhIERPTSBldmVudCB0byBhXG4gKiBnZW5lcmljIGV2ZW50IChha2EganNhY3Rpb24pLCB0byB3aGljaCB0aGUgYWN0dWFsIGV2ZW50IGhhbmRsZXJzXG4gKiB0aGF0IGltcGxlbWVudCB0aGUgYmVoYXZpb3Igb2YgdGhlIGFwcGxpY2F0aW9uIGFyZSBib3VuZC4gVGhlXG4gKiB2YWx1ZSBpcyBhIHNlbWljb2xvbiBzZXBhcmF0ZWQgbGlzdCBvZiBjb2xvbiBzZXBhcmF0ZWQgcGFpcnMgb2ZcbiAqIGFuIG9wdGlvbmFsIERPTSBldmVudCBuYW1lIGFuZCBhIGpzYWN0aW9uIG5hbWUuIElmIHRoZSBvcHRpb25hbFxuICogRE9NIGV2ZW50IG5hbWUgaXMgb21pdHRlZCwgJ2NsaWNrJyBpcyBhc3N1bWVkLiBUaGUganNhY3Rpb24gbmFtZXNcbiAqIGFyZSBkb3Qgc2VwYXJhdGVkIHBhaXJzIG9mIGEgbmFtZXNwYWNlIGFuZCBhIHNpbXBsZSBqc2FjdGlvblxuICogbmFtZS4gSWYgdGhlIG5hbWVzcGFjZSBpcyBhYnNlbnQsIGl0IGlzIHRha2VuIGZyb20gdGhlIGNsb3Nlc3RcbiAqIGFuY2VzdG9yIGVsZW1lbnQgd2l0aCBhIGpzbmFtZXNwYWNlIGF0dHJpYnV0ZSwgaWYgdGhlcmUgaXNcbiAqIGFueS4gSWYgdGhlcmUgaXMgbm8gYW5jZXN0b3Igd2l0aCBhIGpzbmFtZXNwYWNlIGF0dHJpYnV0ZSwgdGhlXG4gKiBzaW1wbGUgbmFtZSBpcyBhc3N1bWVkIHRvIGJlIHRoZSBqc2FjdGlvbiBuYW1lLlxuICpcbiAqIFVzZWQgYnkgRXZlbnRDb250cmFjdC5cbiAqL1xuZXhwb3J0IGNvbnN0IEpTQUNUSU9OID0gJ2pzYWN0aW9uJztcblxuLyoqXG4gKiBUaGUganNuYW1lc3BhY2UgYXR0cmlidXRlIHByb3ZpZGVzIHRoZSBuYW1lc3BhY2UgcGFydCBvZiB0aGVcbiAqIGphY3Rpb24gbmFtZXMgb2NjdXJyaW5nIGluIHRoZSBqc2FjdGlvbiBhdHRyaWJ1dGUgd2hlcmUgaXQnc1xuICogbWlzc2luZy5cbiAqXG4gKiBVc2VkIGJ5IEV2ZW50Q29udHJhY3QuXG4gKi9cbmV4cG9ydCBjb25zdCBKU05BTUVTUEFDRSA9ICdqc25hbWVzcGFjZSc7XG5cbi8qKlxuICogVGhlIG9pIGF0dHJpYnV0ZSBpcyBhIGxvZyBpbXByZXNzaW9uIHRhZyBmb3IgaW1wcmVzc2lvbiBsb2dnaW5nXG4gKiBhbmQgYWN0aW9uIHRyYWNraW5nLiBGb3IgYW4gZWxlbWVudCB0aGF0IGNhcnJpZXMgYSBqc2FjdGlvblxuICogYXR0cmlidXRlLCB0aGUgZWxlbWVudCBpcyBpZGVudGlmaWVkIGZvciB0aGUgcHVycG9zZSBvZlxuICogaW1wcmVzc2lvbiBsb2dnaW5nIGFuZCBjbGljayB0cmFja2luZyBieSB0aGUgZG90IHNlcGFyYXRlZCBwYXRoXG4gKiBvZiBhbGwgb2kgYXR0cmlidXRlcyBpbiB0aGUgY2hhaW4gb2YgYW5jZXN0b3JzIG9mIHRoZSBlbGVtZW50LlxuICpcbiAqIFVzZWQgYnkgQWN0aW9uRmxvdy5cbiAqL1xuZXhwb3J0IGNvbnN0IE9JID0gJ29pJztcblxuLyoqXG4gKiBUaGUgdmVkIGF0dHJpYnV0ZSBpcyBhbiBlbmNvZGVkIENsaWNrVHJhY2tpbmdDR0kgcHJvdG8gdG8gdHJhY2tcbiAqIHZpc3VhbCBlbGVtZW50cy5cbiAqXG4gKiBVc2VkIGJ5IEFjdGlvbkZsb3cuXG4gKi9cbmV4cG9ydCBjb25zdCBWRUQgPSAndmVkJztcblxuLyoqXG4gKiBUaGUgdmV0IGF0dHJpYnV0ZSBpcyB0aGUgdmlzdWFsIGVsZW1lbnQgdHlwZSB1c2VkIHRvIGlkZW50aWZ5IHRyYWNrZWRcbiAqIHZpc3VhbCBlbGVtZW50cy5cbiAqL1xuZXhwb3J0IGNvbnN0IFZFVCA9ICd2ZXQnO1xuXG4vKipcbiAqIFN1cHBvcnQgZm9yIGl0ZXJhdGlvbiBvbiByZXByb2Nlc3NpbmcuXG4gKlxuICogVXNlZCBieSBBY3Rpb25GbG93LlxuICovXG5leHBvcnQgY29uc3QgSlNJTlNUQU5DRSA9ICdqc2luc3RhbmNlJztcblxuLyoqXG4gKiBBbGwgY2xpY2sganNhY3Rpb25zIHRoYXQgaGFwcGVuIG9uIHRoZSBlbGVtZW50IHRoYXQgY2FycmllcyB0aGlzXG4gKiBhdHRyaWJ1dGUgb3IgaXRzIGRlc2NlbmRhbnRzIGFyZSBhdXRvbWF0aWNhbGx5IGxvZ2dlZC5cbiAqIEltcHJlc3Npb25zIG9mIGpzYWN0aW9ucyBvbiB0aGVzZSBlbGVtZW50cyBhcmUgdHJhY2tlZCB0b28sIGlmXG4gKiByZXF1ZXN0ZWQgYnkgdGhlIGltcHJlc3Npb24oKSBtZXRob2Qgb2YgQWN0aW9uRmxvdy5cbiAqXG4gKiBVc2VkIGJ5IEFjdGlvbkZsb3cuXG4gKi9cbmV4cG9ydCBjb25zdCBKU1RSQUNLID0gJ2pzdHJhY2snO1xuXG5leHBvcnQgY29uc3QgQXR0cmlidXRlID0ge0pTQUNUSU9OLCBKU05BTUVTUEFDRSwgT0ksIFZFRCwgVkVULCBKU0lOU1RBTkNFLCBKU1RSQUNLfTtcbiJdfQ==