/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { InjectionToken } from '../../di/injection_token';
/**
 * Injectable that is notified when an `LView` is made aware of changes to application state.
 */
export class ChangeDetectionScheduler {
}
/** Token used to indicate if zoneless was enabled via provideZonelessChangeDetection(). */
export const ZONELESS_ENABLED = new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'Zoneless enabled' : '', { providedIn: 'root', factory: () => false });
export const ZONELESS_SCHEDULER_DISABLED = new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'scheduler disabled' : '');
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiem9uZWxlc3Nfc2NoZWR1bGluZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2NvcmUvc3JjL2NoYW5nZV9kZXRlY3Rpb24vc2NoZWR1bGluZy96b25lbGVzc19zY2hlZHVsaW5nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUVILE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQztBQTBDeEQ7O0dBRUc7QUFDSCxNQUFNLE9BQWdCLHdCQUF3QjtDQUc3QztBQUVELDJGQUEyRjtBQUMzRixNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBRyxJQUFJLGNBQWMsQ0FDaEQsT0FBTyxTQUFTLEtBQUssV0FBVyxJQUFJLFNBQVMsQ0FBQyxDQUFDLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFDdkUsRUFBQyxVQUFVLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyxLQUFLLEVBQUMsQ0FDM0MsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLDJCQUEyQixHQUFHLElBQUksY0FBYyxDQUMzRCxPQUFPLFNBQVMsS0FBSyxXQUFXLElBQUksU0FBUyxDQUFDLENBQUMsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUMxRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5cbmltcG9ydCB7SW5qZWN0aW9uVG9rZW59IGZyb20gJy4uLy4uL2RpL2luamVjdGlvbl90b2tlbic7XG5cbmV4cG9ydCBjb25zdCBlbnVtIE5vdGlmaWNhdGlvblNvdXJjZSB7XG4gIC8vIENoYW5nZSBkZXRlY3Rpb24gbmVlZHMgdG8gcnVuIGluIG9yZGVyIHRvIHN5bmNocm9uaXplIGFwcGxpY2F0aW9uIHN0YXRlXG4gIC8vIHdpdGggdGhlIERPTSB3aGVuIHRoZSBmb2xsb3dpbmcgbm90aWZpY2F0aW9ucyBhcmUgcmVjZWl2ZWQ6XG4gIC8vIFRoaXMgb3BlcmF0aW9uIGluZGljYXRlcyB0aGF0IGEgc3VidHJlZSBuZWVkcyB0byBiZSB0cmF2ZXJzZWQgZHVyaW5nIGNoYW5nZSBkZXRlY3Rpb24uXG4gIE1hcmtBbmNlc3RvcnNGb3JUcmF2ZXJzYWwsXG4gIC8vIEEgY29tcG9uZW50L2RpcmVjdGl2ZSBnZXRzIGEgbmV3IGlucHV0LlxuICBTZXRJbnB1dCxcbiAgLy8gRGVmZXIgYmxvY2sgc3RhdGUgdXBkYXRlcyBuZWVkIGNoYW5nZSBkZXRlY3Rpb24gdG8gZnVsbHkgcmVuZGVyIHRoZSBzdGF0ZS5cbiAgRGVmZXJCbG9ja1N0YXRlVXBkYXRlLFxuICAvLyBEZWJ1Z2dpbmcgdG9vbHMgdXBkYXRlZCBzdGF0ZSBhbmQgaGF2ZSByZXF1ZXN0ZWQgY2hhbmdlIGRldGVjdGlvbi5cbiAgRGVidWdBcHBseUNoYW5nZXMsXG4gIC8vIENoYW5nZURldGVjdG9yUmVmLm1hcmtGb3JDaGVjayBpbmRpY2F0ZXMgdGhlIGNvbXBvbmVudCBpcyBkaXJ0eS9uZWVkcyB0byByZWZyZXNoLlxuICBNYXJrRm9yQ2hlY2ssXG4gIC8vIE5vZGUgcmVtb3ZhbCBpcyBxdWV1ZWQgaW4gYW5pbWF0aW9uIGNvZGUgYW5kIG5lZWRzIGNoYW5nZSBkZXRlY3Rpb24gdG8gZmx1c2guXG4gIC8vIFRPRE8oYXRzY290dCk6IFdlIHNob3VsZCBub3QgaGF2ZSB0byByZWZyZXNoIHZpZXdzIGluIG9yZGVyIHRvIGZsdXNoIGFuaW1hdGlvbnMuXG4gIEFuaW1hdGlvblF1ZXVlZE5vZGVSZW1vdmFsLFxuXG4gIC8vIEJvdW5kIGxpc3RlbmVyIGNhbGxiYWNrcyBleGVjdXRlIGFuZCBjYW4gdXBkYXRlIHN0YXRlIHdpdGhvdXQgY2F1c2luZyBvdGhlciBub3RpZmljYXRpb25zIGZyb21cbiAgLy8gYWJvdmUuXG4gIExpc3RlbmVyLFxuXG4gIC8vIFRoZSBmb2xsb3dpbmcgbm90aWZpY2F0aW9ucyBkbyBub3QgcmVxdWlyZSB2aWV3cyB0byBiZSByZWZyZXNoZWRcbiAgLy8gYnV0IHdlIHNob3VsZCBleGVjdXRlIHJlbmRlciBob29rczpcbiAgLy8gUmVuZGVyIGhvb2tzIGFyZSBndWFyYW50ZWVkIHRvIGV4ZWN1dGUgd2l0aCB0aGUgc2NoZWR1bGVycyB0aW1pbmcuXG4gIE5ld1JlbmRlckhvb2ssXG4gIC8vIFZpZXdzIG1pZ2h0IGJlIGNyZWF0ZWQgb3V0c2lkZSBhbmQgbWFuaXB1bGF0ZWQgaW4gd2F5cyB0aGF0XG4gIC8vIHdlIGNhbm5vdCBiZSBhd2FyZSBvZi4gV2hlbiBhIHZpZXcgaXMgYXR0YWNoZWQsIEFuZ3VsYXIgbm93IFwia25vd3NcIlxuICAvLyBhYm91dCBpdCBhbmQgd2Ugbm93IGtub3cgdGhhdCBET00gbWlnaHQgaGF2ZSBjaGFuZ2VkIChhbmQgd2Ugc2hvdWxkXG4gIC8vIHJ1biByZW5kZXIgaG9va3MpLiBJZiB0aGUgYXR0YWNoZWQgdmlldyBpcyBkaXJ0eSwgdGhlIGBNYXJrQW5jZXN0b3JzRm9yVHJhdmVyc2FsYFxuICAvLyBub3RpZmljYXRpb24gc2hvdWxkIGFsc28gYmUgcmVjZWl2ZWQuXG4gIFZpZXdBdHRhY2hlZCxcbiAgLy8gV2hlbiBET00gcmVtb3ZhbCBoYXBwZW5zLCByZW5kZXIgaG9va3MgbWF5IGJlIGludGVyZXN0ZWQgaW4gdGhlIG5ld1xuICAvLyBET00gc3RhdGUgYnV0IHdlIGRvIG5vdCBuZWVkIHRvIHJlZnJlc2ggYW55IHZpZXdzIHVubGVzcy4gSWYgY2hhbmdlXG4gIC8vIGRldGVjdGlvbiBpcyByZXF1aXJlZCBhZnRlciBET00gcmVtb3ZhbCwgYW5vdGhlciBub3RpZmljYXRpb24gc2hvdWxkXG4gIC8vIGJlIHJlY2VpdmVkIChpLmUuIGBtYXJrRm9yQ2hlY2tgKS5cbiAgVmlld0RldGFjaGVkRnJvbURPTSxcbiAgLy8gQXBwbHlpbmcgYW5pbWF0aW9ucyBtaWdodCByZXN1bHQgaW4gbmV3IERPTSBzdGF0ZSBhbmQgc2hvdWxkIHJlcnVuIHJlbmRlciBob29rc1xuICBBc3luY0FuaW1hdGlvbnNMb2FkZWQsXG59XG5cbi8qKlxuICogSW5qZWN0YWJsZSB0aGF0IGlzIG5vdGlmaWVkIHdoZW4gYW4gYExWaWV3YCBpcyBtYWRlIGF3YXJlIG9mIGNoYW5nZXMgdG8gYXBwbGljYXRpb24gc3RhdGUuXG4gKi9cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBDaGFuZ2VEZXRlY3Rpb25TY2hlZHVsZXIge1xuICBhYnN0cmFjdCBub3RpZnkoc291cmNlOiBOb3RpZmljYXRpb25Tb3VyY2UpOiB2b2lkO1xuICBhYnN0cmFjdCBydW5uaW5nVGljazogYm9vbGVhbjtcbn1cblxuLyoqIFRva2VuIHVzZWQgdG8gaW5kaWNhdGUgaWYgem9uZWxlc3Mgd2FzIGVuYWJsZWQgdmlhIHByb3ZpZGVab25lbGVzc0NoYW5nZURldGVjdGlvbigpLiAqL1xuZXhwb3J0IGNvbnN0IFpPTkVMRVNTX0VOQUJMRUQgPSBuZXcgSW5qZWN0aW9uVG9rZW48Ym9vbGVhbj4oXG4gIHR5cGVvZiBuZ0Rldk1vZGUgPT09ICd1bmRlZmluZWQnIHx8IG5nRGV2TW9kZSA/ICdab25lbGVzcyBlbmFibGVkJyA6ICcnLFxuICB7cHJvdmlkZWRJbjogJ3Jvb3QnLCBmYWN0b3J5OiAoKSA9PiBmYWxzZX0sXG4pO1xuXG5leHBvcnQgY29uc3QgWk9ORUxFU1NfU0NIRURVTEVSX0RJU0FCTEVEID0gbmV3IEluamVjdGlvblRva2VuPGJvb2xlYW4+KFxuICB0eXBlb2YgbmdEZXZNb2RlID09PSAndW5kZWZpbmVkJyB8fCBuZ0Rldk1vZGUgPyAnc2NoZWR1bGVyIGRpc2FibGVkJyA6ICcnLFxuKTtcbiJdfQ==