/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { InjectionToken } from '../../di/injection_token';
/**
 * Injectable that is notified when an `LView` is made aware of changes to application state.
 */
export class ChangeDetectionScheduler {
}
/** Token used to indicate if zoneless was enabled via provideZonelessChangeDetection(). */
export const ZONELESS_ENABLED = new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'Zoneless enabled' : '', { providedIn: 'root', factory: () => false });
export const ZONELESS_SCHEDULER_DISABLED = new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'scheduler disabled' : '');
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiem9uZWxlc3Nfc2NoZWR1bGluZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2NvcmUvc3JjL2NoYW5nZV9kZXRlY3Rpb24vc2NoZWR1bGluZy96b25lbGVzc19zY2hlZHVsaW5nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUVILE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQztBQXdDeEQ7O0dBRUc7QUFDSCxNQUFNLE9BQWdCLHdCQUF3QjtDQUc3QztBQUVELDJGQUEyRjtBQUMzRixNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBRyxJQUFJLGNBQWMsQ0FDOUMsT0FBTyxTQUFTLEtBQUssV0FBVyxJQUFJLFNBQVMsQ0FBQyxDQUFDLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFDdkUsRUFBQyxVQUFVLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyxLQUFLLEVBQUMsQ0FBQyxDQUFDO0FBRWhELE1BQU0sQ0FBQyxNQUFNLDJCQUEyQixHQUFHLElBQUksY0FBYyxDQUN6RCxPQUFPLFNBQVMsS0FBSyxXQUFXLElBQUksU0FBUyxDQUFDLENBQUMsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIExMQyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cblxuaW1wb3J0IHtJbmplY3Rpb25Ub2tlbn0gZnJvbSAnLi4vLi4vZGkvaW5qZWN0aW9uX3Rva2VuJztcblxuXG5leHBvcnQgY29uc3QgZW51bSBOb3RpZmljYXRpb25Tb3VyY2Uge1xuICAvLyBDaGFuZ2UgZGV0ZWN0aW9uIG5lZWRzIHRvIHJ1biBpbiBvcmRlciB0byBzeW5jaHJvbml6ZSBhcHBsaWNhdGlvbiBzdGF0ZVxuICAvLyB3aXRoIHRoZSBET00gd2hlbiB0aGUgZm9sbG93aW5nIG5vdGlmaWNhdGlvbnMgYXJlIHJlY2VpdmVkOlxuICAvLyBUaGlzIG9wZXJhdGlvbiBpbmRpY2F0ZXMgdGhhdCBhIHN1YnRyZWUgbmVlZHMgdG8gYmUgdHJhdmVyc2VkIGR1cmluZyBjaGFuZ2UgZGV0ZWN0aW9uLlxuICBNYXJrQW5jZXN0b3JzRm9yVHJhdmVyc2FsLFxuICAvLyBBIGNvbXBvbmVudC9kaXJlY3RpdmUgZ2V0cyBhIG5ldyBpbnB1dC5cbiAgU2V0SW5wdXQsXG4gIC8vIERlZmVyIGJsb2NrIHN0YXRlIHVwZGF0ZXMgbmVlZCBjaGFuZ2UgZGV0ZWN0aW9uIHRvIGZ1bGx5IHJlbmRlciB0aGUgc3RhdGUuXG4gIERlZmVyQmxvY2tTdGF0ZVVwZGF0ZSxcbiAgLy8gRGVidWdnaW5nIHRvb2xzIHVwZGF0ZWQgc3RhdGUgYW5kIGhhdmUgcmVxdWVzdGVkIGNoYW5nZSBkZXRlY3Rpb24uXG4gIERlYnVnQXBwbHlDaGFuZ2VzLFxuICAvLyBDaGFuZ2VEZXRlY3RvclJlZi5tYXJrRm9yQ2hlY2sgaW5kaWNhdGVzIHRoZSBjb21wb25lbnQgaXMgZGlydHkvbmVlZHMgdG8gcmVmcmVzaC5cbiAgTWFya0ZvckNoZWNrLFxuXG4gIC8vIEJvdW5kIGxpc3RlbmVyIGNhbGxiYWNrcyBleGVjdXRlIGFuZCBjYW4gdXBkYXRlIHN0YXRlIHdpdGhvdXQgY2F1c2luZyBvdGhlciBub3RpZmljYXRpb25zIGZyb21cbiAgLy8gYWJvdmUuXG4gIExpc3RlbmVyLFxuXG4gIC8vIFRoZSBmb2xsb3dpbmcgbm90aWZpY2F0aW9ucyBkbyBub3QgcmVxdWlyZSB2aWV3cyB0byBiZSByZWZyZXNoZWRcbiAgLy8gYnV0IHdlIHNob3VsZCBleGVjdXRlIHJlbmRlciBob29rczpcbiAgLy8gUmVuZGVyIGhvb2tzIGFyZSBndWFyYW50ZWVkIHRvIGV4ZWN1dGUgd2l0aCB0aGUgc2NoZWR1bGVycyB0aW1pbmcuXG4gIE5ld1JlbmRlckhvb2ssXG4gIC8vIFZpZXdzIG1pZ2h0IGJlIGNyZWF0ZWQgb3V0c2lkZSBhbmQgbWFuaXB1bGF0ZWQgaW4gd2F5cyB0aGF0XG4gIC8vIHdlIGNhbm5vdCBiZSBhd2FyZSBvZi4gV2hlbiBhIHZpZXcgaXMgYXR0YWNoZWQsIEFuZ3VsYXIgbm93IFwia25vd3NcIlxuICAvLyBhYm91dCBpdCBhbmQgd2Ugbm93IGtub3cgdGhhdCBET00gbWlnaHQgaGF2ZSBjaGFuZ2VkIChhbmQgd2Ugc2hvdWxkXG4gIC8vIHJ1biByZW5kZXIgaG9va3MpLiBJZiB0aGUgYXR0YWNoZWQgdmlldyBpcyBkaXJ0eSwgdGhlIGBNYXJrQW5jZXN0b3JzRm9yVHJhdmVyc2FsYFxuICAvLyBub3RpZmljYXRpb24gc2hvdWxkIGFsc28gYmUgcmVjZWl2ZWQuXG4gIFZpZXdBdHRhY2hlZCxcbiAgLy8gV2hlbiBET00gcmVtb3ZhbCBoYXBwZW5zLCByZW5kZXIgaG9va3MgbWF5IGJlIGludGVyZXN0ZWQgaW4gdGhlIG5ld1xuICAvLyBET00gc3RhdGUgYnV0IHdlIGRvIG5vdCBuZWVkIHRvIHJlZnJlc2ggYW55IHZpZXdzIHVubGVzcy4gSWYgY2hhbmdlXG4gIC8vIGRldGVjdGlvbiBpcyByZXF1aXJlZCBhZnRlciBET00gcmVtb3ZhbCwgYW5vdGhlciBub3RpZmljYXRpb24gc2hvdWxkXG4gIC8vIGJlIHJlY2VpdmVkIChpLmUuIGBtYXJrRm9yQ2hlY2tgKS5cbiAgVmlld0RldGFjaGVkRnJvbURPTSxcbiAgLy8gQXBwbHlpbmcgYW5pbWF0aW9ucyBtaWdodCByZXN1bHQgaW4gbmV3IERPTSBzdGF0ZSBhbmQgc2hvdWxkIHJlcnVuIHJlbmRlciBob29rc1xuICBBc3luY0FuaW1hdGlvbnNMb2FkZWRcbn1cblxuLyoqXG4gKiBJbmplY3RhYmxlIHRoYXQgaXMgbm90aWZpZWQgd2hlbiBhbiBgTFZpZXdgIGlzIG1hZGUgYXdhcmUgb2YgY2hhbmdlcyB0byBhcHBsaWNhdGlvbiBzdGF0ZS5cbiAqL1xuZXhwb3J0IGFic3RyYWN0IGNsYXNzIENoYW5nZURldGVjdGlvblNjaGVkdWxlciB7XG4gIGFic3RyYWN0IG5vdGlmeShzb3VyY2U6IE5vdGlmaWNhdGlvblNvdXJjZSk6IHZvaWQ7XG4gIGFic3RyYWN0IHJ1bm5pbmdUaWNrOiBib29sZWFuO1xufVxuXG4vKiogVG9rZW4gdXNlZCB0byBpbmRpY2F0ZSBpZiB6b25lbGVzcyB3YXMgZW5hYmxlZCB2aWEgcHJvdmlkZVpvbmVsZXNzQ2hhbmdlRGV0ZWN0aW9uKCkuICovXG5leHBvcnQgY29uc3QgWk9ORUxFU1NfRU5BQkxFRCA9IG5ldyBJbmplY3Rpb25Ub2tlbjxib29sZWFuPihcbiAgICB0eXBlb2YgbmdEZXZNb2RlID09PSAndW5kZWZpbmVkJyB8fCBuZ0Rldk1vZGUgPyAnWm9uZWxlc3MgZW5hYmxlZCcgOiAnJyxcbiAgICB7cHJvdmlkZWRJbjogJ3Jvb3QnLCBmYWN0b3J5OiAoKSA9PiBmYWxzZX0pO1xuXG5leHBvcnQgY29uc3QgWk9ORUxFU1NfU0NIRURVTEVSX0RJU0FCTEVEID0gbmV3IEluamVjdGlvblRva2VuPGJvb2xlYW4+KFxuICAgIHR5cGVvZiBuZ0Rldk1vZGUgPT09ICd1bmRlZmluZWQnIHx8IG5nRGV2TW9kZSA/ICdzY2hlZHVsZXIgZGlzYWJsZWQnIDogJycpO1xuIl19