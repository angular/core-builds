/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBpLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvY29yZS9zcmMvcmVuZGVyMy9kZXBzX3RyYWNrZXIvYXBpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuXG5pbXBvcnQge1R5cGV9IGZyb20gJy4uLy4uL2NvcmUnO1xuaW1wb3J0IHtOZ01vZHVsZVR5cGV9IGZyb20gJy4uLy4uL21ldGFkYXRhL25nX21vZHVsZV9kZWYnO1xuaW1wb3J0IHtDb21wb25lbnRUeXBlLCBEZXBlbmRlbmN5VHlwZUxpc3QsIERpcmVjdGl2ZVR5cGVMaXN0LCBOZ01vZHVsZVNjb3BlSW5mb0Zyb21EZWNvcmF0b3IsIFBpcGVUeXBlTGlzdH0gZnJvbSAnLi4vaW50ZXJmYWNlcy9kZWZpbml0aW9uJztcblxuLyoqXG4gKiBSZXByZXNlbnRzIHRoZSBzZXQgb2YgZGVwZW5kZW5jaWVzIG9mIGEgdHlwZSBpbiBhIGNlcnRhaW4gY29udGV4dC5cbiAqL1xuaW50ZXJmYWNlIFNjb3BlRGF0YSB7XG4gIHBpcGVzOiBQaXBlVHlwZUxpc3Q7XG4gIGRpcmVjdGl2ZXM6IERpcmVjdGl2ZVR5cGVMaXN0O1xuXG4gIC8qKlxuICAgKiBJZiB0cnVlIGl0IGluZGljYXRlcyB0aGF0IGNhbGN1bGF0aW5nIHRoaXMgc2NvcGUgc29tZWhvdyB3YXMgbm90IHN1Y2Nlc3NmdWwuIFRoZSBjb25zdW1lcnNcbiAgICogc2hvdWxkIGludGVycHJldCB0aGlzIGFzIGVtcHR5IGRlcGVuZGVuY2llcy4gVGhlIGFwcGxpY2F0aW9uIG9mIHRoaXMgZmxhZyBpcyB3aGVuIGNhbGN1bGF0aW5nXG4gICAqIHNjb3BlIHJlY3Vyc2l2ZWx5LCB0aGUgcHJlc2VuY2Ugb2YgdGhpcyBmbGFnIGluIGEgc2NvcGUgZGVwZW5kZW5jeSBpbXBsaWVzIHRoYXQgdGhlIHNjb3BlIGlzXG4gICAqIGFsc28gcG9pc29uZWQgYW5kIHRodXMgd2UgY2FuIHJldHVybiBpbW1lZGlhdGVseSB3aXRob3V0IGhhdmluZyB0byBjb250aW51ZSB0aGUgcmVjdXJzaW9uLiBUaGVcbiAgICogcmVhc29uIGZvciB0aGlzIGVycm9yIGlzIGRpc3BsYXllZCBhcyBhbiBlcnJvciBtZXNzYWdlIGluIHRoZSBjb25zb2xlIGFzIHBlciBKSVQgYmVoYXZpb3JcbiAgICogdG9kYXkuIEluIGFkZGl0aW9uIHRvIHRoYXQsIGluIGxvY2FsIGNvbXBpbGF0aW9uIHRoZSBvdGhlciBidWlsZC9jb21waWxhdGlvbnMgcnVuIGluIHBhcmFsbGVsXG4gICAqIHdpdGggbG9jYWwgY29tcGlsYXRpb24gbWF5IG9yIG1heSBub3QgcmV2ZWFsIHNvbWUgZGV0YWlscyBhYm91dCB0aGUgZXJyb3IgYXMgd2VsbC5cbiAgICovXG4gIGlzUG9pc29uZWQ/OiBib29sZWFuO1xufVxuXG4vKiogUmVwcmVzZW50cyBzY29wZSBkYXRhIGZvciBOZ01vZHVsZSBhcyBjYWxjdWxhdGVkIGR1cmluZyBydW50aW1lIGJ5IHRoZSBkZXBzIHRyYWNrZXIuICovXG5leHBvcnQgaW50ZXJmYWNlIE5nTW9kdWxlU2NvcGUge1xuICBjb21waWxhdGlvbjogU2NvcGVEYXRhO1xuICBleHBvcnRlZDogU2NvcGVEYXRhO1xufVxuXG4vKipcbiAqIFJlcHJlc2VudHMgc2NvcGUgZGF0YSBmb3Igc3RhbmRhbG9uZSBjb21wb25lbnQgYXMgY2FsY3VsYXRlZCBkdXJpbmcgcnVudGltZSBieSB0aGUgZGVwcyB0cmFja2VyLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIFN0YW5kYWxvbmVDb21wb25lbnRTY29wZSB7XG4gIGNvbXBpbGF0aW9uOiBTY29wZURhdGE7XG59XG5cbi8qKiBDb21wb25lbnQgZGVwZW5kZW5jaWVzIGluZm8gYXMgY2FsY3VsYXRlZCBkdXJpbmcgcnVudGltZSBieSB0aGUgZGVwcyB0cmFja2VyLiAqL1xuZXhwb3J0IGludGVyZmFjZSBDb21wb25lbnREZXBlbmRlbmNpZXMge1xuICBkZXBlbmRlbmNpZXM6IERlcGVuZGVuY3lUeXBlTGlzdDtcbn1cblxuLyoqXG4gKiBQdWJsaWMgQVBJIGZvciBydW50aW1lIGRlcHMgdHJhY2tlciAoUkRUKS5cbiAqXG4gKiBBbGwgZG93bnN0cmVhbSB0b29scyBzaG91bGQgb25seSB1c2UgdGhlc2UgbWV0aG9kcy5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBEZXBzVHJhY2tlckFwaSB7XG4gIC8qKlxuICAgKiBDb21wdXRlcyB0aGUgY29tcG9uZW50IGRlcGVuZGVuY2llcywgaS5lLiwgYSBzZXQgb2YgY29tcG9uZW50cy9kaXJlY3RpdmUvcGlwZXMgdGhhdCBjb3VsZCBiZVxuICAgKiBwcmVzZW50IGluIHRoZSBjb21wb25lbnQncyB0ZW1wbGF0ZSAoVGhpcyBzZXQgbWlnaHQgY29udGFpbiBkaXJlY3RpdmVzL2NvbXBvbmVudHMvcGlwZXMgbm90XG4gICAqIG5lY2Vzc2FyaWx5IHVzZWQgaW4gdGhlIGNvbXBvbmVudCdzIHRlbXBsYXRlIGRlcGVuZGluZyBvbiB0aGUgaW1wbGVtZW50YXRpb24pLlxuICAgKlxuICAgKiBUaGUgaW1wbGVtZW50YXRpb24gaXMgZXhwZWN0ZWQgdG8gdXNlIHNvbWUgY2FjaGluZyBtZWNoYW5pc20gaW4gb3JkZXIgdG8gb3B0aW1pemUgdGhlIHJlc291cmNlc1xuICAgKiBuZWVkZWQgdG8gZG8gdGhpcyBjb21wdXRhdGlvbi5cbiAgICovXG4gIGdldENvbXBvbmVudERlcGVuZGVuY2llcyhjbXA6IENvbXBvbmVudFR5cGU8YW55Pik6IENvbXBvbmVudERlcGVuZGVuY2llcztcblxuICAvKipcbiAgICogUmVnaXN0ZXJzIGFuIE5nTW9kdWxlIGludG8gdGhlIHRyYWNrZXIgd2l0aCB0aGUgZ2l2ZW4gc2NvcGUgaW5mby5cbiAgICpcbiAgICogVGhpcyBtZXRob2Qgc2hvdWxkIGJlIGNhbGxlZCBmb3IgZXZlcnkgTmdNb2R1bGUgd2hldGhlciBpdCBpcyBjb21waWxlZCBpbiBsb2NhbCBtb2RlIG9yIG5vdC5cbiAgICogVGhpcyBpcyBuZWVkZWQgaW4gb3JkZXIgdG8gY29tcHV0ZSBjb21wb25lbnQncyBkZXBlbmRlbmNpZXMgYXMgc29tZSBkZXBlbmRlbmNpZXMgbWlnaHQgYmUgaW5cbiAgICogZGlmZmVyZW50IGNvbXBpbGF0aW9uIHVuaXRzIHdpdGggZGlmZmVyZW50IGNvbXBpbGF0aW9uIG1vZGUuXG4gICAqL1xuICByZWdpc3Rlck5nTW9kdWxlKHR5cGU6IFR5cGU8YW55Piwgc2NvcGVJbmZvOiBOZ01vZHVsZVNjb3BlSW5mb0Zyb21EZWNvcmF0b3IpOiB2b2lkO1xuXG4gIC8qKlxuICAgKiBDbGVhcnMgdGhlIHNjb3BlIGNhY2hlIGZvciBOZ01vZHVsZSBvciBzdGFuZGFsb25lIGNvbXBvbmVudC4gVGhpcyB3aWxsIGZvcmNlIHJlLWNhbGN1bGF0aW9uIG9mXG4gICAqIHRoZSBzY29wZSwgd2hpY2ggY291bGQgYmUgYW4gZXhwZW5zaXZlIG9wZXJhdGlvbiBhcyBpdCBpbnZvbHZlcyBhZ2dyZWdhdGluZyB0cmFuc2l0aXZlIGNsb3N1cmUuXG4gICAqXG4gICAqIFRoZSBtYWluIGFwcGxpY2F0aW9uIG9mIHRoaXMgbWV0aG9kIGlzIGZvciB0ZXN0IGJlZHMgd2hlcmUgd2Ugd2FudCB0byBjbGVhciB0aGUgY2FjaGUgdG9cbiAgICogZW5mb3JjZSBzY29wZSB1cGRhdGUgYWZ0ZXIgb3ZlcnJpZGluZy5cbiAgICovXG4gIGNsZWFyU2NvcGVDYWNoZUZvcih0eXBlOiBDb21wb25lbnRUeXBlPGFueT58TmdNb2R1bGVUeXBlKTogdm9pZDtcblxuICAvKipcbiAgICogUmV0dXJucyB0aGUgc2NvcGUgb2YgTmdNb2R1bGUuIE1haW5seSB0byBiZSB1c2VkIGJ5IEpJVCBhbmQgdGVzdCBiZWQuXG4gICAqXG4gICAqIFRoZSBzY29wZSB2YWx1ZSBoZXJlIGlzIG1lbW9pemVkLiBUbyBlbmZvcmNlIGEgbmV3IGNhbGN1bGF0aW9uIGJ1c3QgdGhlIGNhY2hlIGJ5IHVzaW5nXG4gICAqIGBjbGVhclNjb3BlQ2FjaGVGb3JgIG1ldGhvZC5cbiAgICovXG4gIGdldE5nTW9kdWxlU2NvcGUodHlwZTogTmdNb2R1bGVUeXBlPGFueT4pOiBOZ01vZHVsZVNjb3BlO1xuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBzY29wZSBvZiBzdGFuZGFsb25lIGNvbXBvbmVudC4gTWFpbmx5IHRvIGJlIHVzZWQgYnkgSklULlxuICAgKlxuICAgKiBUaGUgc2NvcGUgdmFsdWUgaGVyZSBpcyBtZW1vaXplZC4gVG8gZW5mb3JjZSBhIG5ldyBjYWxjdWxhdGlvbiBidXN0IHRoZSBjYWNoZSBieSB1c2luZ1xuICAgKiBgY2xlYXJTY29wZUNhY2hlRm9yYCBtZXRob2QuXG4gICAqL1xuICBnZXRTdGFuZGFsb25lQ29tcG9uZW50U2NvcGUodHlwZTogQ29tcG9uZW50VHlwZTxhbnk+LCBpbXBvcnRzOiBUeXBlPGFueT5bXSk6XG4gICAgICBTdGFuZGFsb25lQ29tcG9uZW50U2NvcGU7XG59XG4iXX0=